# .travis.yml --
#
# Travis CI configuration for CCTemplate.

#page
#### about compiler packages
#
# We select build  by build the packages to install;  it should speed up
# preparation.  By  putting a single "addons"  key at the top  level: we
# would cause  all the compilers to  be installed for all  the builds in
# the matrix; we do not want this.

#page
#### about compiler selection
#
# We select the  compiler we want with the "compiler"  key.  This should
# set the environment variable CC to the associated compiler executable;
# I have verified that it actually does so when the language is C.  I am
# not sure that it actually does it when the language is C++.
#
# To check which C or C++ compiler  is actually selected, we can put the
# following  in  every "script:"  key,  before  running the  "configure"
# script as follows:
#
#    script: |
#      echo CC=$CC; $CC --version;
#      echo CXX=$CXX; $CXX --version;
#      ./configure
#

#page
#### about dependency packages
#
# We  install  dependency  packages under  "/tmp/mine",  so  appropriate
# directories must  be added to  the global path  environment variables,
# otherwise the installed packages will  not be found and used correctly
# by the "configure" script.
#
#
# We need the following in the global environment:
#
#   env:
#     global:
#       - PATH=/tmp/mine/bin:$PATH;
#       - LD_LIBRARY_PATH=/tmp/mine/lib:$LD_LIBRARY_PATH;
#       - PKG_CONFIG_PATH=/tmp/mine/lib/pkgconfig:$PKG_CONFIG_PATH;
#
# Alternatively, we can put the following in every "script:" key, before
# running the "configure" script as follows:
#
#   script: |
#     export PATH=/tmp/mine/bin:$PATH;
#     export LD_LIBRARY_PATH=/tmp/mine/lib:$LD_LIBRARY_PATH;
#     export PKG_CONFIG_PATH=/tmp/mine/lib/pkgconfig:$PKG_CONFIG_PATH;
#     ./configure
#

#page
#### global configuration

sudo: false
language: c

# Let's just look at the project's dashboard at Travis CI's site.
#
notifications:
  email: false

# We do no git operations, so set the "git clone" depth to the minimum.
#
git:
  depth: 1

branches:
  only:
    - master

env:
  global:
    - MAKEFLAGS="-j 2"
    - PATH=/tmp/mine/bin:$PATH;
    - LD_LIBRARY_PATH=/tmp/mine/lib:$LD_LIBRARY_PATH;
    - PKG_CONFIG_PATH=/tmp/mine/lib/pkgconfig:$PKG_CONFIG_PATH;

#page
#### dependencies management

# install:
#   - ./meta/travis-ci/install-some-dependency.sh

#page
#### build scripts

before_script:
  # On Linux the GNU libtool  preparation script is called "libtoolize",
  # while on OS X it is called "glibtoolize".
  - if test "$TRAVIS_OS_NAME" = osx ; then export LIBTOOLIZE=glibtoolize; else true; fi
  - sh ./autogen.sh;

matrix:
  fast_finish: true

  include:
    # Plain build under Ubuntu GNU+Linux "trusty", GCC 5.
    - os: linux
      dist: trusty
      compiler: gcc-5
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - texinfo
            - gcc-5
      script: |
        ./configure --enable-maintainer-mode;
        make all;
        make check;

    # Plain build under Ubuntu GNU+Linux "trusty", GCC 6.
    - os: linux
      dist: trusty
      compiler: gcc-6
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - texinfo
            - gcc-6
      script: |
        ./configure --enable-maintainer-mode;
        make all;
        make check;

    # Plain build under Ubuntu GNU+Linux "trusty", GCC 7.
    - os: linux
      dist: trusty
      compiler: gcc-7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - texinfo
            - gcc-7
      script: |
        ./configure --enable-maintainer-mode;
        make all;
        make check;

    # Plain build  under Ubuntu GNU+Linux "trusty",  CLang automatically
    # selected by Travis CI.
    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - texinfo
      compiler: clang
      script: |
        ./configure --enable-maintainer-mode;
        make all;
        make check;

    # Plain build under OS X, XCode 7.3, CLang automatically selected by
    # Travis CI.
    - os: osx
      osx_image: xcode7.3
      compiler: clang
      script: |
        ./configure --enable-maintainer-mode;
        make all;
        make check;

    # Plain build under OS X, XCode 8.3, CLang automatically selected by
    # Travis CI.
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      script: |
        ./configure --enable-maintainer-mode;
        make all;
        make check;

    # Codecov support under Ubuntu GNU+Linux "trusty", GCC 7.
    - os: linux
      dist: trusty
      compiler: gcc-7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - texinfo
            - gcc-7
      script: |
        ./configure --enable-maintainer-mode CFLAGS='-O0 --coverage';
        make all;
        make check;
      after_success:
        bash <(curl -s https://codecov.io/bash) -xgcov-7

#page
#### done

### end of file
# Local Variables:
# paragraph-start: "#[ \t].+\\|$"
# paragraph-separate: "#[ \t]*$"
# fill-prefix: "# "
# page-delimiter: "^#page"
# End:
